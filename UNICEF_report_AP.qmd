---
title: "UNICEF REPORT"
subtitle: |
  <div style="display: inline; color: #1F407A; font-weight: bold;">When Hope Fades:</div> 
  <div style="display: inline; color: #1F77B4; font-style: italic;"> The Story of Najir</div>
jupyter: python3
format:
  html:
    embed-resources: true
    code-fold: true
    theme: sandstone
    toc: true                 
    toc-depth: 3             
    toc-location: left       
    toc-title: "Table of Contents"       
execute:
  error: true
  echo: true
  eval: true
---

**Author**: Anthea Petrillo                      
**Published**: April 27, 2025


<div style="text-align: center;">
  <img src="Uniceflogo.png" width="200px">
</div>

## Report Objective

<p style="font-size: 16px;"> This report aims to raise awareness about the tragic reality of <b>child deaths</b> caused by <b><span style="color: #1F407A;">diarrhoea</span></b> in <b>children under the age of five</b>. Although <i><u>preventable and treatable condition</u></i>, it remains one of the <b><i><span style="color: #1F407A;">leading causes of child mortality in many low-income countries</span></i></b>, where access to healthcare is limited.

The <i>narrative voice</i> of this report is that of <b><span style="color: #1F407A;">Najir, a <i>4-year-old child who tells his story</i></span></b>: from when he tells his mother he has a stomach ache, to when, despite efforts to find a cure, he sadly does not survive. Although this is a fictional story, it is plausible enough to reflect what happens in <b><i>countries with low access to diarrhoea care</i></b>, where the inadequacy of healthcare resources is tied to <i>economic and social inequalities</i>.


## Data Sources

<p style="font-size: 16px;">
  The data used in this report comes from the following datasets:
</p>

<ol style="font-size: 16px;">
  <li><b><span style="color: #1F407A;">unicef_indicator_1.csv</span></b>: provides global data on the percentage of children under five with diarrhoea who can access <b><i><span style="color: #1F77B4;">healthcare facilities</span></i></b></li>
  
  <li><b><span style="color: #1F407A;">unicef_indicator_2.csv</span></b>: offers global data on the percentage of healthcare facilities with <b><i><span style="color: #1F77B4;">basic water access</span></i></b></li>
  
  <li><b><span style="color: #1F407A;">unicef_metadata.csv</span></b>: includes <b><i><span style="color: #1F77B4;">economic and social data</span></i></b></li>
  
  <li><b><span style="color: #1F407A;">deaths_caused_by_diarrhoea.csv</span></b>: provides data on <b><i><span style="color: #1F77B4;">diarrhoea-related child mortality</span></i></b> categorized by seven <b><i><span style="color: #1F77B4;">regions</span></i></b>: North America, South Asia, Middle East and North Africa, Europe and Central Asia, Latin America and Caribbean, East Asia and Pacific, Sub-Saharan Africa</span>. You can download it <a href="https://data.unicef.org/topic/child-health/diarrhoeal-disease/#data" target="_blank">here</a>.
</li>
</ol>

Please find the <b><i><span style="color: #1F407A;">Tableau version</span></i></b> of this report [here](https://public.tableau.com/app/profile/anthea.petrillo/viz/ThestoryofNajir_/Dashboard32).



## <span style="color: #1F407A;"><b>Najir's Story</b></span>

![](Najir.png)

**<span style="background-color:#D6EEFF;">My name is Najir, and I am four years old.</span>** 

I do not feel well. A sharp pain grips my stomach, and my mother tells me I have diarrhoea.
She holds my hand tightly, her face etched with worry, her eyes filled with silent fear.
***<span style="color:#1F407A;">"We must find help,"</span>*** she says. **<span style="background-color:#D6EEFF;">However, seeking medical care is not a simple task.</span>**

<p style="font-size: 17px;"> 
I live in one of the *<span style="color:#1F407A;">nineteen countries</span>* where, according to data collected **between 2017 and 2023**, among all the *children under the age of five suffering from diarrhoea*, **fewer than 40% have access** to _<span style="color:#1F407A;">medical advice or treatment</span>_ at a healthcare facility or from a trained provider.
</p>



# <span style="color:#1F407A;">Healthcare access for children with diarrhoea</span><em><span style="color:#1F77B4;"> in lowest-access countries</span></em>

```{python}
import pandas as pd
from plotnine import ggplot, aes, geom_bar, labs, theme_minimal, theme, element_text, scale_fill_gradient, element_rect

df = pd.read_excel("unicef_indicator_1_filtered_firstgraph.xlsx")

df['access to care for diarrhoea'] = df['access to care for diarrhoea'] * 100

bar_chart = (
    ggplot(df, aes(x='country', y='access to care for diarrhoea', fill='access to care for diarrhoea')) 
    + geom_bar(stat='identity', show_legend=False, width=0.35)  
    + scale_fill_gradient(low='#D5006D', high='#FF80AB') 
    + labs(
        x='Country', 
        y='Access to Care for Diarrhoea (%)'
    ) 
    + theme_minimal() 
    + theme(
        figure_size=(8, 5), 
        plot_background=element_rect(fill='#F5FBFF', color='#F5FBFF'),  
        panel_background=element_rect(fill='#F5FBFF', color='#F5FBFF'), 
        panel_grid_major=None, 
        panel_grid_minor=None,
        axis_text_x=element_text(rotation=45, ha='right', size=10, color='#1F407A'),  
        axis_text_y=element_text(size=8, color='#1F407A', weight='bold'),  
        axis_title_x=element_text(size=12, color='#1F407A', weight='bold'),  
        axis_title_y=element_text(size=10, color='#1F407A', weight='bold'),  
        plot_title=element_text(size=0)  
    )
)

bar_chart
```

<p style="font-size: 16px;">
A serious public health crisis is evident: **<span style="color:#1F407A;">limited accessibility and availability of essential healthcare services</span>** in specific areas of the world.
<br><br>
Despite being a preventable and treatable condition, **_diarrhoea remains one of the leading causes of child mortality_** in countries where healthcare systems are fragile.
<br><br> According to the **_2021_** data, diarrhoea accounted for <span style="color:#1F407A;">**9% of all deaths in children under 5**</span> - over 1,200 daily, or 440,000 annually.
<br>

<p>The following histogram displays the <span style="color: #1F407A; font-weight: bold; font-style: italic;">global distribution of child diarrheal mortality in 2021</span>. Each <strong>vertical bar</strong> represents a specific mortality rate <span style="color: #1F407A; font-style: italic;">(from 0% to 16%)</span>, while its <strong>height</strong> indicates how many countries fall into that percentage range.</p>

<p>The structure simultaneously reveals three key insights:</p>

<ul>
<li><span style="color: #1F407A; font-weight: bold;">Extent of the phenomenon</span> (horizontal position on the scale)</li>
<li><span style="color: #1F407A; font-weight: bold;">Geographical distribution</span> (color-coded bar segments)</li>
<li><span style="color: #1F407A; font-weight: bold;">Regional representation</span> (width of colored segments).</li>
</ul>

<p>The graph clearly demonstrates how diarrheal impact varies dramatically across regions, with a gradient ranging from minimal percentages in developed areas to alarming rates in critical zones.</p>

Mortality is highest in **_Sub-Saharan Africa_**.
</p>

# <span style="color:#1F407A;">Countries with diarrhoea-related child mortality</span><em><span style="color:#1F77B4;">, by region (2021)</span></em>

```{python}
import pandas as pd
import plotly.graph_objects as go

df = pd.read_csv('Deaths caused by diarrhoea 2019 (MCEE 2020) (3).csv', 
                 skiprows=4, 
                 header=None,
                 names=['country', 'deaths', 'region', 'coordinates', 'country_full', 'year'])

df['deaths'] = pd.to_numeric(df['deaths'], errors='coerce')
df = df.dropna(subset=['deaths'])

region_mapping = {
    'Europe and Central Asia': 'Europe & Central Asia',
    'Latin America and Caribbean': 'Latin America & Caribbean',
    'Middle East and North Africa': 'Middle East & North Africa',
    'East Asia and Pacific': 'East Asia & Pacific',
    'Sub-Saharan Africa': 'Sub-Saharan Africa',
    'South Asia': 'South Asia',
    'North America': 'North America'
}
df['region'] = df['region'].map(region_mapping)

custom_colors = {
    'South Asia': '#FFCEE7',
    'Europe & Central Asia': '#FFA8D1',
    'North America': '#FF85BB',
    'Sub-Saharan Africa': '#F364A2',
    'East Asia & Pacific': '#E34F8A',
    'Middle East & North Africa': '#CC4178',
    'Latin America & Caribbean': '#FFB6C1'
}

fig = go.Figure()

for region, color in custom_colors.items():
    filtered_df = df[df['region'] == region]
    fig.add_trace(go.Histogram(
        x=filtered_df['deaths'],
        name=region,
        marker_color=color,
        nbinsx=20,
        opacity=0.85,
        hovertemplate=
            'Region: ' + region + '<br>' +
            '% of deaths: %{x:.1f}%<br>' +
            'Number of countries: %{y}<extra></extra>'
    ))

fig.update_layout(
    barmode='stack',
    plot_bgcolor='#F5FBFF',
    paper_bgcolor='#F5FBFF',
    showlegend=True,
    legend=dict(
        title_text='Region',
        orientation="h",
        yanchor="bottom",
        y=-0.25,
        xanchor="center",
        x=0.5
    ),
    xaxis=dict(
        title="Deaths caused by diarrhoea in children under 5 years old (%)",
        title_standoff=10,
        tickmode='linear',
        dtick=2
    ),
    yaxis=dict(
        title="Count of affected countries, per region",
        dtick=5
    ),
    bargap=0.1,
    title=None
)

fig.show()
```

Based on **__GDP per capita__**, it is possible to identify 10 of the **__richest countries__** in the world and 10 of the **__poorest__**. Among the latter, the percentage of access to treatment for **__diarrhea__** is extremely low, both for <span style="color: #1a365d; font-weight: bold; font-style: italic;">boys like me</span> and for <span style="color: #8B008B; font-weight: bold; font-style: italic;">girls like my sisters</span>.

# <span style="color:#1F407A;">Healthcare access for children with diarrhoea</span><em><span style="color:#1F77B4;"> (top 10 poorest countries)</span></em>

```{python}
import pandas as pd

df = pd.read_csv('unicef_metadata_7.csv', usecols=['country', 'year', 'GDP per capita (constant 2015 US$)'])
df = df[(df['year'] == 2022)].dropna()

top10_high = df.nlargest(10, 'GDP per capita (constant 2015 US$)')['country'].tolist()
top10_low = df.nsmallest(10, 'GDP per capita (constant 2015 US$)')['country'].tolist()

print("Top 10 countries with the highest GDP per capita in 2022:", top10_high)
print("Top 10 countries with the lowest GDP per capita in 2022:", top10_low)
```

```{python}
# Libraries
import pandas as pd
import plotly.express as px

# Load the dataset
df = pd.read_csv("unicef_indicator_1 (2).csv")

# List of target countries
countries_of_interest = [
    'Burundi', 'Afghanistan', 'Central African Republic', 'Madagascar', 
    'Somalia', 'Congo, the Democratic Republic of the', 'Malawi', 
    'Niger', 'Chad', 'Mozambique'
]

# Filter dataset: only Male/Female and target countries
df_filtered = df[
    (df["sex"].isin(["Female", "Male"])) &
    (df["country"].isin(countries_of_interest))
]

# Calculate yearly averages by sex
df_grouped = df_filtered.groupby(["time_period", "sex"], as_index=False)["obs_value"].mean()

# Create line plot
fig = px.line(
    df_grouped,
    x="time_period",
    y="obs_value",
    color="sex",
    labels={
        "time_period": "<b>Year</b>",
        "obs_value": "<b>Average Value (%)</b>",
        "sex": "<b>Sex</b>"
    },
    color_discrete_map={
        "Female": "#FF69B4",  # Pink
        "Male": "#00BFFF"     # Blue
    }
)

# Style improvements
fig.update_traces(mode="lines+markers", line_width=2.5)
fig.update_layout(
    plot_bgcolor='rgba(245, 245, 245, 0.1)',  # Very light sandstone background
    paper_bgcolor='rgba(245, 245, 245, 0.1)',
    xaxis=dict(
        tickmode="linear",
        title_font=dict(color="#1F407A", size=14),  # Dark blue bold
        tickfont=dict(color="#333333")
    ),
    yaxis=dict(
        range=[0, 100],
        title_font=dict(color="#1F407A", size=14),  # Dark blue bold
        tickfont=dict(color="#333333")
    ),
    legend_title_font=dict(color="#1F407A"),  # Dark blue legend title
    legend_font=dict(color="#333333"),        # Dark text for legend items
    hoverlabel=dict(
        bgcolor="white",
        font_size=12,
        font_family="Arial"
    )
)

fig.show() 
```

<p>There is a <strong><em>hospital</em></strong> in the next village, but the <strong><em>water</em></strong> from the tap tastes like <strong><em>dirt</em></strong>. My mother says that <span style="color: #1a365d; font-weight: bold; font-style: italic;">in richer countries, the water runs clear and doctors always have sterile gloves</span>. I've never seen clean water myself. Maybe if I had, my stomach wouldn't hurt like this.</p>

<p>When we finally reached the hospital, the doctors just shook their heads. <span style="color: #3a7ca5; font-weight: bold; font-style: italic;">'We don't have basic water services here,'</span> they told us. My mother held me tighter, but there was nothing they could do.</p>

In fact, the <span style="color:#1F407A; font-weight:bold;">percentage of healthcare facilities with
access to basic water services is not the same across the world</span>.  

The <span style="color:#17A2B8; font-weight:bold; font-style:italic;">lack of access to basic water services</span> means that healthcare facilities are <em>unable to treat children suffering from diarrhoea</em>.

# <span style="color:#1F407A;">Health care facilities & water access:</span><em><span style="color:#1F77B4;"> country comparison 2021</span></em>
```{python}
import pandas as pd
import plotly.express as px
import warnings

warnings.filterwarnings('ignore')

df = pd.read_csv("unicef_indicator_2 (2).csv")

df_2021 = df[
    (df["time_period"] == 2021) &
    (df["unit_of_measure"] == "%")
].copy()  

df_2021["% Water Access"] = df_2021["obs_value"].apply(lambda x: f"{x:.1f}%")

fig = px.choropleth(
    df_2021,
    locations="alpha_3_code",
    color="obs_value",
    hover_name="country",
    hover_data={
        "alpha_3_code": False,
        "obs_value": False,
        "% Water Access": True
    },
    color_continuous_scale="Blues"
)

fig.update_layout(
    coloraxis_colorbar=dict(
        title="<b>Water Access (%)</b>",
        tickformat=".1f",
        title_font=dict(color="#1F407A", size=12),
        tickfont=dict(color="#1F407A")
    ),
    title=None
)

fig.show()
```


<p>In countries like mine, parents often have <span style="color: #1F407A; font-weight: bold; font-style: italic;">large families</span> because they sadly anticipate that some of their children may not survive. This leads to very high birth rates. Since birth rates and life expectancy are <span style="color: #1F407A; font-weight: bold; font-style: italic;">inversely related</span>, <span style="color: #CC4178; font-weight: bold; font-style: italic;">higher birth rates typically correspond to lower life expectancy at birth</span>.</p>

My mother says that in <span style="color: #1a365d; font-weight: bold; font-style: italic;">rich countries</span>, parents have **__few children__** and live long enough to become **__grandparents__**. Here, instead, who knows if I will even grow up to be as old as my **__father__**.

# <span style="color:#1F407A;">Demographic patterns (2021)</span>: <span style="color:#CC4178; font-style:italic;">Birth rate</span> <span style="color:#1F407A;">&</span> <span style="color:#CC4178; font-style:italic;">Life expectancy</span>

```{python}
import pandas as pd
import plotly.express as px

df = pd.read_csv("unicef_metadata_7.csv")

df_2021 = df[df["year"] == 2021]

df_2021 = df_2021.dropna(subset=["Birth rate, crude (per 1,000 people)", "Life expectancy at birth, total (years)"])

fig = px.scatter(
    df_2021,
    x="Birth rate, crude (per 1,000 people)",
    y="Life expectancy at birth, total (years)",
    hover_name="country",
    trendline="ols",
    color_discrete_sequence=["#FF80AB"],
    trendline_color_override="#4B0082",
    labels={
        "Birth rate, crude (per 1,000 people)": "Birth Rate (per 1,000 people)",
        "Life expectancy at birth, total (years)": "Life Expectancy (years)"
    }
)

fig.update_layout(
    plot_bgcolor="#F5FBFF",
    paper_bgcolor="#F5FBFF",
    xaxis_title="<b>Birth Rate (per 1,000 people)</b>",
    yaxis_title="<b>Life Expectancy (years)</b>",
    xaxis=dict(
        title_font=dict(color="#1F407A", size=14), 
        tickfont=dict(color="#333333", size=12)   
    ),
    yaxis=dict(
        title_font=dict(color="#1F407A", size=14), 
        tickfont=dict(color="#333333", size=12) 
    ),
    hoverlabel=dict(
        bgcolor="white",
        font_size=12
    )
)

fig.show()
```


In the following chart, the disparity in birth rates between the poorest countries (**<span style="color: #FF69B4;">pink</span>** trend line) and the richest countries (**<span style="color: #800080;">purple</span>** trend line) is even more evident.

# <span style="color:#1F407A;">Birth Rate Trends</span>: <span style="color:#1F77B4; font-style:italic;">High vs Low Rate Countries</span>

```{python}
import pandas as pd
from plotnine import ggplot, aes, geom_line, labs, theme_minimal, theme, element_text, element_rect, scale_color_manual

# Carica i dati
df = pd.read_csv("unicef_metadata_7.csv")

# Definisci i gruppi di paesi
high_birth = ["Niger", "Chad", "Somalia", "Central African Republic", "Mali",
              "Congo", "Nigeria", "Uganda", "Mozambique", "Benin"]
low_birth = ["South Korea", "Hong Kong", "Puerto Rico", "Japan", "Andorra", 
             "San Marino", "Italy", "China", "Spain", "Greece"]

# Assegna etichette personalizzate
df["group"] = df["country"].apply(
    lambda x: "Top 10 High Birth Rate Countries" if x in high_birth else (
              "Top 10 Low Birth Rate Countries" if x in low_birth else None)
)

# Filtra solo i gruppi rilevanti
df_grouped = df[df["group"].notna()]

# Elimina righe con valori nulli
df_grouped = df_grouped.dropna(subset=["Birth rate, crude (per 1,000 people)"])

# Calcola la media annuale per ogni gruppo
media_anni = (
    df_grouped
    .groupby(["year", "group"])["Birth rate, crude (per 1,000 people)"]
    .mean()
    .reset_index()
)

# Crea il grafico
grafico = (
    ggplot(media_anni, aes(x="year", y="Birth rate, crude (per 1,000 people)", color="group")) +
    geom_line(size=1.5) +
    scale_color_manual(values={
        "Top 10 High Birth Rate Countries": "#FF69B4",  # rosa
        "Top 10 Low Birth Rate Countries": "#800080"    # viola
    }) +
    labs(
        x="Year",
        y="Average Birth Rate (per 1,000 people)",
        color="Country Group"
    ) +
    theme_minimal() +
    theme(
        axis_title_x=element_text(color="#1F407A", size=12, weight='bold'),  # grassetto
        axis_title_y=element_text(color="#1F407A", size=12, weight='bold'),  # grassetto
        legend_title=element_text(size=11),
        legend_text=element_text(size=10),
        figure_size=(8, 6),
        panel_background=element_rect(fill="#F5FBFF", color=None)  # sfondo azzurro chiarissimo
    )
)

grafico
```


In places like mine, where **_wealth is scarce_**, families have many children, not by choice, but because they lack the resources to provide for them.  

In <span style="color: #1a365d; font-weight: bold; font-style: italic;">wealthier countries</span>, parents can afford to care for fewer children, offering them more opportunities and better care. There, families are small and everyone smiles.  

Here, the **_scarcity of resources_** means more children with fewer chances for a long, healthy life. Here, adults say, <span style="color: #1a365d; font-weight: bold; font-style: italic;">"We have many children because the sky will take some of them."</span> But I hope the sky won't take any of us.

# <span style="color:#1F407A;">GDP per capita and its effect on</span> <span style="color:#1F77B4; font-style:italic;">birth rate</span>

```{python}
import pandas as pd
import plotly.express as px

# Carica il dataset
df = pd.read_csv("unicef_metadata_7.csv")

# Filtra i dati per l'anno 2022 e pulisci
df_2022 = df[df["year"] == 2022]
df_cleaned = df_2022.dropna(subset=["GDP per capita (constant 2015 US$)", "Birth rate, crude (per 1,000 people)"])
df_cleaned["Birth rate, crude (per 1,000 people)"] = df_cleaned["Birth rate, crude (per 1,000 people)"].round(1)

# Crea il grafico con le personalizzazioni richieste
fig = px.scatter(
    df_cleaned,
    x="GDP per capita (constant 2015 US$)",
    y="Birth rate, crude (per 1,000 people)",
    labels={
        "GDP per capita (constant 2015 US$)": "<b>GDP per capita (USD)</b>",
        "Birth rate, crude (per 1,000 people)": "<b>Birth rate (per 1,000 people)</b>"
    },
    color_discrete_sequence=["#FDB79A"],  # Colore rosa per i punti
    trendline="lowess",
    trendline_color_override="#FF69B4"  # Linea viola
)

# Personalizzazione avanzata
fig.update_traces(
    mode='markers',
    marker=dict(
        size=8,
        opacity=0.7,
        line=dict(width=1, color='DarkSlateGrey')
    ),
    selector=dict(mode='markers')
)

# Migliora l'aspetto della linea di tendenza
fig.update_traces(
    line=dict(width=4),
    selector=dict(type='scatter', mode='lines')
)

# Aggiorna il layout con le nuove specifiche
fig.update_layout(
    plot_bgcolor='#F5FBFF',  # Colore sfondo personalizzato
    paper_bgcolor='#F5FBFF',  # Colore area grafico
    xaxis_title="<b>GDP per capita (USD)</b>",
    yaxis_title="<b>Birth rate (per 1,000 people)</b>",
    template="plotly_white",
    font=dict(
        family="Arial",
        size=12,
    ),
    hovermode="closest",
    showlegend=False,
    xaxis=dict(
        range=[0, 100000],
        tickvals=[0, 20000, 40000, 60000, 80000, 100000],
        tickformat=",",
        title_font=dict(color="#1F407A", size=14),  # Asse X blu scuro e grassetto
        tickfont=dict(color="#333333")
    ),
    yaxis=dict(
        range=[0, 45],
        tickvals=[0, 5, 10, 15, 20, 25, 30, 35, 40, 45],
        title_font=dict(color="#1F407A", size=14),  # Asse Y blu scuro e grassetto
        tickfont=dict(color="#333333")
    )
)

# Aggiungi annotazione fonte dati
fig.add_annotation(
    x=0.5,
    y=-0.15,
    xref="paper",
    yref="paper",
    text="Fonte: Dati UNICEF 2022",
    showarrow=False,
    font=dict(
        size=10,
        color="grey"
    )
)

fig.show()
```

To save the lives of the youngest from **preventable deaths** like *diarrhea* it is essential to <span style="background-color: #D6EEFF;">enhance access to healthcare services.</span> Reducing **infant mortality** from *diarrhea* requires <span style="background-color: #D6EEFF;">improving the hygienic and economic conditions</span> of the most disadvantaged populations.

Many lives, including mine, could have been saved with better access to healthcare.

With a **donation to UNICEF**, you can <span style="background-color: #D6EEFF;">save many lives</span> and ensure that the *hope of many children* remains **alive**, never *fading*, as mine unfortunately has.


<div style="text-align:center">
<a href="https://donazioni.unicef.it/lp/thatsall?wdgs=GAPM&type=reg&utm_source=google&utm_medium=cpc&utm_campaign=CD_GA_SEA_PLEDGE_maln_GADS_BRAND_noexact_27032024&utm_adgroup=_NO_EXACT_brand_pura&gad_source=1&gclid=Cj0KCQjw4v6-BhDuARIsALprm32xVHM4Ks4EGCzXyslB8_yVRQg-e3E2sGklwtrCPwJkVXWfgZLtOxsaAvKDEALw_wcB#/home" target="_blank">
<img src="donate.png" alt="Donate" style="cursor:pointer;max-width:100%">
</a>
</div>

<p style="text-align: center;"><em>Thank you for lending your ear to my story.</em></p>
